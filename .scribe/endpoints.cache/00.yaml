## Autogenerated by Scribe. DO NOT MODIFY.

name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: 'Get a JWT via given credentials.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'string User email'
        required: false
        example: athena13@example.org
        type: required
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'string User password'
        required: false
        example: '^)~yz@$z,!#9'
        type: required
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: athena13@example.org
      password: '^)~yz@$z,!#9'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"access_token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNzA3ODQ5MjE1LCJleHAiOjE3MDc4NTI4MTUsIm5iZiI6MTcwNzg0OTIxNSwianRpIjoiNnFqVG96SU1EUUNWTEl5MyIsInN1YiI6IjEiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3IiwibmFtZSI6InByZXplcyJ9.8cIexRisn6VIky90dhJHmfZkaIntSduK30nupLa-ggI","token_type":"bearer","expires_in":3600}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"error":"Unauthorized! Those credentials didn''t match our records."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Log the user out (Invalidate the token).'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {JWT_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fcaev64DV51dkP6h83bgaZE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/refresh
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Refresh a token.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {JWT_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P5V8kfbg16EZ4cavh3d6aeD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/me
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the authenticated User.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {JWT_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"error":"Unauthenticated"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5ab61VdDP3Ea8eZfkg6hc4v'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user'
      description: 'This endpoint is used to register a new user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'string User email'
        required: false
        example: delores10@example.org
        type: required
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'string User name'
        required: false
        example: repellendus
        type: required
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'string User password'
        required: false
        example: '-$k1\iX'
        type: required
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'string User password confirmtion'
        required: false
        example: perspiciatis
        type: required
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: delores10@example.org
      name: repellendus
      password: '-$k1\iX'
      password_confirmation: perspiciatis
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL3JlZ2lzdGVyIiwiaWF0IjoxNzA3ODQ2NDgzLCJleHAiOjE3MDc4NTAwODMsIm5iZiI6MTcwNzg0NjQ4MywianRpIjoiWWJEMU9Ia2FtMHBVQ1JhSiIsInN1YiI6IjEwIiwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyIsIm5hbWUiOiJwcmV6ZXMifQ.iSDUMleme6ztmn8cvs713_bxbNGgqzlQ-8kTWUqW83g",
          "token_type": "bearer",
          "expires_in": 3600
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "email": [
                  "The email has already been taken."
              ],
              "password": [
                  "The password field must be at least 8 characters.",
                  "The password field confirmation does not match."
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
